@using Recipify.Web.ViewModels.Recipe
@model EditRecipeViewModel

@{
    ViewData["Title"] = "Edit Recipe";
}

<link href="~/css/templatemo-softy-pinko.css" rel="stylesheet" media="all">

<link href="~/css/font-awesome.css" rel="stylesheet" media="all">

<link href="~/css/flex-slider.css" rel="stylesheet" media="all">

<link href="~/css/bootstrap.min.css" rel="stylesheet" media="all">

<link rel="stylesheet" href="~/css/custom.css" media="all">


<h2>@ViewData["Title"]</h2>
<hr />

@await Html.PartialAsync("_ValidationSummary")

<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="Id" />
    <div class="mb-3">
        <label asp-for="Title" class="form-label"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="ShortDescription" class="form-label"></label>
        <textarea asp-for="ShortDescription" class="form-control"></textarea>
        <span asp-validation-for="ShortDescription" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label class="form-label">Ingredients</label>
        <div id="ingredients-list">
            @if (Model.Ingredients != null)
            {
                @for (int i = 0; i < Model.Ingredients.Count; i++)
                {
                    <div class="ingredient-row row mb-2" data-index="@i">
                        <input type="hidden" name="Ingredients[@i].Id" value="@Model.Ingredients[i].Id" />

                        <div class="col">
                            <input class="form-control" name="Ingredients[@i].Name" value="@Model.Ingredients[i].Name" placeholder="Name" />
                        </div>
                        <div class="col">
                            <input class="form-control" name="Ingredients[@i].Quantity" value="@Model.Ingredients[i].Quantity" placeholder="Quantity" />
                        </div>
                        <div class="col-auto">
                            <button type="button" class="btn btn-danger remove-ingredient">×</button>
                        </div>
                    </div>
                }
            }
        </div>
        <button type="button" id="add-ingredient" class="btn btn-secondary mt-2">Add Ingredient</button>
    </div>

    <input type="hidden" name="DeletedIngredientIds" id="DeletedIngredientIds" />


    <div class="mb-3">
        <label asp-for="Instructions" class="form-label"></label>
        <textarea asp-for="Instructions" class="form-control"></textarea>
        <span asp-validation-for="Instructions" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="ImageUrl" class="form-label"></label>
        <input asp-for="ImageUrl" class="form-control" />
        <span asp-validation-for="ImageUrl" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Category" class="form-label"></label>
        <select asp-for="Category" asp-items="Model.Categories" class="form-select"></select>
        <span asp-validation-for="Category" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Cuisine" class="form-label"></label>
        <select asp-for="Cuisine" asp-items="Model.Cuisines" class="form-select"></select>
        <span asp-validation-for="Cuisine" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="DifficultyLevel" class="form-label"></label>
        <select asp-for="DifficultyLevel" asp-items="Model.DifficultyLevels" class="form-select"></select>
        <span asp-validation-for="DifficultyLevel" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-success">Save Changes</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    <script>
        let ingredientIndex = @Model.Ingredients?.Count ?? 0;

        document.getElementById('add-ingredient').addEventListener('click', function () {
            const container = document.getElementById('ingredients-list');

            const row = document.createElement('div');
            row.classList.add('ingredient-row', 'row', 'mb-2');
            row.dataset.index = ingredientIndex;

            row.innerHTML = `
                <input type="hidden" name="Ingredients[${ingredientIndex}].Id" value="0" />
                <div class="col">
                    <input class="form-control" name="Ingredients[${ingredientIndex}].Name" placeholder="Name" />
                </div>
                <div class="col">
                    <input class="form-control" name="Ingredients[${ingredientIndex}].Quantity" placeholder="Quantity" />
                </div>
                <div class="col-auto">
                    <button type="button" class="btn btn-danger remove-ingredient">×</button>
                </div>
            `;

            container.appendChild(row);
            ingredientIndex++;
        });

        



            document.getElementById('ingredients-list').addEventListener('click', function (e) {
        if (e.target.classList.contains('remove-ingredient')) {
            const row = e.target.closest('.ingredient-row');
            const idInput = row.querySelector('input[name$=".Id"]');
            const deletedInput = document.getElementById('DeletedIngredientIds');

            if (idInput && idInput.value && idInput.value !== "0") {
                let deletedIds = deletedInput.value ? deletedInput.value.split(',') : [];
                deletedIds.push(idInput.value);
                deletedInput.value = deletedIds.join(',');
            }

            row.remove();
        }
		});
    </script>
}